plugins {
    id 'org.springframework.boot' version '2.5.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

task depAll(type: DependencyReportTask){
}

configurations {
    all*.exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    all*.exclude group: "ch.qos.logback"
    all*.exclude group: "org.slf4j", module: "log4j-over-slf4j"
    all*.exclude group: "org.slf4j", module: "slf4j-simple"
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'

    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

    group = "kz.iitu.diploma"

    buildscript {
        repositories {
            mavenLocal()
            mavenCentral()
        }
    }

    repositories {
        mavenLocal()
        mavenCentral()
    }

    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
    [compileJava, compileTestJava]*.options*.debugOptions*.debugLevel = "source,lines,vars"
}

subprojects {
    task allDeps(type: DependencyReportTask) {}

    dependencies {
        ext.jacksonVersion = "2.10.2"
        ext.greetgoUtilVersion = '2.0.0'
        ext.greetgoConfVersion = '1.3.1'
        ext.greetgoSchedulingVersion = "3.0.1"
        ext.postgresJdbcVersion = '42.2.23'
        ext.springVersion = '2.1.3.RELEASE'
        ext.emailVersion = "0.0.10"
        ext.dbVersion = '2.3.4'
        ext.libase = '1.0.10'
        ext.slf4jApiVersion = "1.7.30"
        ext.mybatisVersion = "2.2.0"
        ext.liquibaseVersion = "4.4.0"
        ext.testngVersion = "7.4.0"
        ext.lombokVersion = "1.18.20"
        ext.guavaVersion = "30.1.1-jre"
        ext.slf4jVersion = "1.7.30"
        ext.swagger2Version = "3.0.0"
        ext.classScannerVersion = "2.0.4"

        implementation "org.projectlombok:lombok:$lombokVersion"
        annotationProcessor "org.projectlombok:lombok:$lombokVersion"
    }

    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
        options.addStringOption('encoding', 'UTF-8')
        options.addStringOption('charSet', 'UTF-8')
    }

    test.useTestNG()

    sourceSets.main.java.srcDirs = ["main/java"]
    sourceSets.test.java.srcDirs = ["test/java"]
    sourceSets.main.resources.srcDirs = ["main/resources"]
    sourceSets.test.resources.srcDirs = ["test/resources"]

    idea.module.downloadSources = true
    idea.module.downloadJavadoc = true
    idea.module.inheritOutputDirs = false
    idea.module.outputDir = file("$buildDir/classes/main/")
    idea.module.testOutputDir = file("$buildDir/classes/test/")

    jar {
        manifest {
            attributes 'Implementation-Title': project.name
            attributes 'Implementation-Vendor': "greetgo!"
            attributes 'Created-By': System.getProperty("user.name")
            attributes 'Created-At': new Date().format("yyyy-MM-dd/HH:mm:ss")
        }
    }
}

bootJar {
    enabled false
}

dependencies {
}